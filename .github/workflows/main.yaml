name: Rust

on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test

  performance-test:
    name: Performance Test
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Pull compose images # to avoid caching, as pull is faster than caching
        run: docker compose pull
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build local docker image
        run: docker compose -f docker-compose.yaml -f docker-compose-release.yaml build
      - name: Start docker compose
        run: docker compose -f docker-compose.yaml -f docker-compose-release.yaml up -d
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Run tests
        uses: arthurgeek/run-gatling@94619b11473d9c634fcd5739bc095126f13d068b
        with:
          pomPath: "."
      - name: Stop docker compose
        run: docker compose -f docker-compose.yaml -f docker-compose-release.yaml down

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Linting
        run: cargo clippy --all-targets --all-features -- -D warnings
